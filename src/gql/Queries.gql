query categories($notEqualTo: Int = null) {
	categories(filter: { id: { notEqualTo: $notEqualTo } }) {
		nodes {
			id
			default
			order
			name
			mangas {
				totalCount
			}
		}
	}
}

query category($id: Int!) {
	category(id: $id) {
		mangas {
			nodes {
				id
				title
				inLibrary
				thumbnailUrl
				unreadCount
				downloadCount
				lastReadChapter {
					lastReadAt
				}
				chapters {
					totalCount
				}
			}
		}
	}
}

query getManga($id: Int!) {
	manga(id: $id) {
		...MangaTypeFragment
		chapters {
			totalCount
			nodes {
				...ChapterTypeFragment
			}
		}
	}
}

query getSingleChapter($id: Int!) {
	chapter(id: $id) {
		...ChapterTypeFragment
	}
}

query extensions($isNsfw: Boolean = null) {
	extensions(condition: { isNsfw: $isNsfw }) {
		nodes {
			...ExtensionTypeFragment
		}
	}
}

query sources($isNsfw: Boolean = null) {
	sources(condition: { isNsfw: $isNsfw }) {
		nodes {
			...SourceTypeFragment
			isNsfw
			extension {
				pkgName
			}
		}
	}
}

query sourcesMigration {
	sources {
		nodes {
			...SourceTypeFragment
		}
	}
	mangas(condition: { inLibrary: true }) {
		totalCount
		nodes {
			sourceId
		}
	}
}

query sourceMigrationManga($sourceId: LongString!) {
	mangas(condition: { inLibrary: true, sourceId: $sourceId }) {
		nodes {
			id
			title
			thumbnailUrl
		}
	}
}

query sourceMigrationsource($sourceId: LongString!) {
	source(id: $sourceId) {
		displayName
	}
}

query MangaTitleMigration($id: Int!) {
	manga(id: $id) {
		title
	}
}

query InfoForMigration($id: Int!) {
	manga(id: $id) {
		chapters {
			nodes {
				id
				isRead
				isBookmarked
				chapterNumber
			}
		}
		categories {
			nodes {
				id
			}
		}
	}
}

query metas {
	metas {
		nodes {
			value
			key
		}
	}
}

query updates($offset: Int = 0) {
	chapters(
		orderBy: FETCHED_AT
		offset: $offset
		first: 100
		orderByType: DESC
		filter: { inLibrary: { equalTo: true } }
	) {
		nodes {
			id
			name
			fetchedAt
			isBookmarked
			isDownloaded
			isRead
			manga {
				id
				title
				thumbnailUrl
			}
		}
		pageInfo {
			hasNextPage
		}
	}
}

query chapters($id: Int!) {
	manga(id: $id) {
		id
		title
		meta {
			value
			key
		}
		chapters {
			nodes {
				id
				name
				pageCount
				lastPageRead
				sourceOrder
			}
		}
	}
}

query source($id: LongString!) {
	source(id: $id) {
		displayName
		id
		lang
		name
		supportsLatest
		isConfigurable
		preferences {
			...PreferenceFragment
		}
		filters {
			...FilterFragment
			... on GroupFilter {
				__typename
				name
				filters {
					...FilterFragment
				}
			}
		}
	}
}

query validateBackup($backup: Upload!) {
	validateBackup(input: { backup: $backup }) {
		missingSources {
			id
			name
		}
	}
}

query ConditionalChaptersOfGivenManga(
	$in: [Int!]!
	$isBookmarked: Boolean = null
	$isDownloaded: Boolean = null
	$isRead: Boolean = null
) {
	chapters(
		filter: { mangaId: { in: $in } }
		condition: { isDownloaded: $isDownloaded, isRead: $isRead, isBookmarked: $isBookmarked }
	) {
		nodes {
			id
		}
	}
}

query about {
	about {
		buildTime
		buildType
		discord
		github
		name
		revision
		version
	}
}

query validateBackup($backup: Upload!) {
	validateBackup(input: { backup: $backup }) {
		missingSources {
			id
			name
		}
	}
}

query restoreStatus($id: String!) {
	restoreStatus(id: $id) {
		mangaProgress
		state
		totalManga
	}
}
