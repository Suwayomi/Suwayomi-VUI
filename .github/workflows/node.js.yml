# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: ["Release"]
  pull_request:
    branches: ["Release"]
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [19.x]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - run: npm ci
      - run: npm run build
      - name: Generate Tag Name
        id: GenTagName
        run: |
          genTag="r$(git rev-list HEAD --count)"
          echo "$genTag"
          echo "value=$genTag" >> $GITHUB_OUTPUT
      - uses: montudor/action-zip@v1
        with:
          args: zip -qq -r release.zip dist/spa
      - name: Upload CI Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "release.zip"
          tag: ${{ steps.GenTagName.outputs.value }}
#         no idea if any of this will work so imma leave it for now
#     - name: Log in to the Container registry
#       uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
#       with:
#         registry: ${{ env.REGISTRY }}
#         username: ${{ github.actor }}
#         password: ${{ secrets.GITHUB_TOKEN }}
#     - name: Extract metadata (tags, labels) for Docker
#       id: meta
#       uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
#       with:
#         images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
#     - name: Build and push Docker image
#       uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
#       with:
#         context: .
#         push: true
#         tags: ${{ steps.meta.outputs.tags }}
#         labels: ${{ steps.meta.outputs.labels }}

#     i would also like to do pages, but idk where to even start with that
